name: .NET Core CI/CD

on:
  push:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

  SmokeTest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x
      
      - name: Install Livingdoc
        run: dotnet tool install --global SpecFlow.Plus.LivingDoc.CLI

      - name: Test
        run: |
          cd SpecFlowLivingDocProject
          mkdir -p TestResults
          dotnet test --test-adapter-path:. --filter "Category=SmokeTest" --logger:"xunit;LogFilePath=$(pwd)/TestResults/SmokeTestsLog_$(date +%Y%m%d%H%M%S).xml"
     
      - name: Generate Living Document
        if: always()
        run: livingdoc test-assembly SpecFlowLivingDocProject/bin/Debug/net8.0/SpecFlowLivingDocProject.dll -t SpecFlowLivingDocProject/bin/Debug/net8.0/TestExecution.json --output SpecFlowLivingDocProject/TestResults/SmokeTest_$(date +%Y%m%d%H%M%S).html 

      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: smoke-test-results
          path: SpecFlowLivingDocProject/TestResults/

  CoreTest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x
      
      - name: Install Livingdoc
        run: dotnet tool install --global SpecFlow.Plus.LivingDoc.CLI
    
      - name: Test
        run: |
          cd SpecFlowLivingDocProject
          mkdir -p TestResults
          dotnet test --test-adapter-path:. --filter "Category=Core" --logger:"xunit;LogFilePath=$(pwd)/TestResults/CoreSetupTests_$(date +%Y%m%d%H%M%S).xml"
     
      - name: Generate Living Document
        if: always()
        run: livingdoc test-assembly SpecFlowLivingDocProject/bin/Debug/net8.0/SpecFlowLivingDocProject.dll -t SpecFlowLivingDocProject/bin/Debug/net8.0/TestExecution.json --output SpecFlowLivingDocProject/TestResults/Core_$(date +%Y%m%d%H%M%S).html 
     
      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: core-test-results
          path: SpecFlowLivingDocProject/TestResults/
